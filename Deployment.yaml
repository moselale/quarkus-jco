kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/connects-to: postgresql
    deployment.kubernetes.io/revision: '28'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"<app_name>:latest","namespace":"<project_name>"},"fieldPath":"spec.template.spec.containers[?(@.name==\"<app_name>\")].image"}]
    openshift.io/generated-by: OpenShiftWebConsole
  selfLink: /apis/apps/v1/namespaces/<project_name>/deployments/<app_name>
  resourceVersion: '14271219'
  name: <app_name>
  generation: 29
  namespace: <project_name>
  labels:
    app: <app_name>
    app.kubernetes.io/component: <app_name>
    app.kubernetes.io/instance: <app_name>
    app.kubernetes.io/part-of: <app_name>
spec:
  replicas: 1
  selector:
    matchLabels:
      app: <app_name>
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: <app_name>
        deploymentconfig: <app_name>
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - name: <app_name>
          image: >-
            image-registry.openshift-image-registry.svc:5000/<project_name>/<app_name>@sha256:< sha256 >
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
